{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/lebiga/Desktop/ITMap/anastasia/src/components/Pages/HomePage/HomePage.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const HomePage = registerClientReference(\n    function() { throw new Error(\"Attempted to call HomePage() from the server but HomePage is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/Pages/HomePage/HomePage.tsx <module evaluation>\",\n    \"HomePage\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,WAAW,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC1C;IAAa,MAAM,IAAI,MAAM;AAAgO,GAC7P,4EACA"}},
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 21, "column": 0}, "map": {"version":3,"sources":["file:///Users/lebiga/Desktop/ITMap/anastasia/src/components/Pages/HomePage/HomePage.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const HomePage = registerClientReference(\n    function() { throw new Error(\"Attempted to call HomePage() from the server but HomePage is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/Pages/HomePage/HomePage.tsx\",\n    \"HomePage\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,WAAW,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC1C;IAAa,MAAM,IAAI,MAAM;AAAgO,GAC7P,wDACA"}},
    {"offset": {"line": 29, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 35, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 45, "column": 0}, "map": {"version":3,"sources":["file:///Users/lebiga/Desktop/ITMap/anastasia/src/app/%5Blocale%5D/page.tsx"],"sourcesContent":["import { notFound } from 'next/navigation';\nimport { supportedLocales } from '@/utils/languageNegotiator';\nimport { HomePage } from '@/components/Pages/HomePage/HomePage';\n\nexport default async function Page({\n  params,\n}: {\n  params: Promise<{ locale: string }>;\n}) {\n  const { locale } = await params;\n\n  // Validate the locale\n  if (!supportedLocales.includes(locale as any)) {\n    notFound();\n  }\n\n  return (\n    <div>\n      <HomePage />\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AAFA;;;;;AAIe,eAAe,KAAK,EACjC,MAAM,EAGP;IACC,MAAM,EAAE,MAAM,EAAE,GAAG,MAAM;IAEzB,sBAAsB;IACtB,IAAI,CAAC,kIAAA,CAAA,mBAAgB,CAAC,QAAQ,CAAC,SAAgB;QAC7C,CAAA,GAAA,qLAAA,CAAA,WAAQ,AAAD;IACT;IAEA,qBACE,8OAAC;kBACC,cAAA,8OAAC,mJAAA,CAAA,WAAQ;;;;;;;;;;AAGf"}},
    {"offset": {"line": 75, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 86, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 86, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 92, "column": 0}, "map": {"version":3,"sources":["file:///Users/lebiga/Desktop/ITMap/anastasia/node_modules/next/dist/src/build/templates/app-page.ts"],"sourcesContent":["import type { LoaderTree } from '../../server/lib/app-dir-module'\nimport { AppPageRouteModule } from '../../server/route-modules/app-page/module.compiled' with { 'turbopack-transition': 'next-ssr' }\nimport { RouteKind } from '../../server/route-kind'\n\n// These are injected by the loader afterwards.\n\n/**\n * The tree created in next-app-loader that holds component segments and modules\n * and I've updated it.\n */\ndeclare const tree: LoaderTree\ndeclare const pages: any\n\n// We inject the tree and pages here so that we can use them in the route\n// module.\n// INJECT:tree\n// INJECT:pages\n\nexport { tree, pages }\n\nexport { default as GlobalError } from 'VAR_MODULE_GLOBAL_ERROR'\n\n// These are injected by the loader afterwards.\ndeclare const __next_app_require__: any\ndeclare const __next_app_load_chunk__: any\n\n// INJECT:__next_app_require__\n// INJECT:__next_app_load_chunk__\n\nexport const __next_app__ = {\n  require: __next_app_require__,\n  loadChunk: __next_app_load_chunk__,\n}\n\nexport * from '../../server/app-render/entry-base'\n\n// Create and export the route module that will be consumed.\nexport const routeModule = new AppPageRouteModule({\n  definition: {\n    kind: RouteKind.APP_PAGE,\n    page: 'VAR_DEFINITION_PAGE',\n    pathname: 'VAR_DEFINITION_PATHNAME',\n    // The following aren't used in production.\n    bundlePath: '',\n    filename: '',\n    appPaths: [],\n  },\n  userland: {\n    loaderTree: tree,\n  },\n})\n"],"names":["AppPageRouteModule","RouteKind","tree","pages","default","GlobalError","__next_app__","require","__next_app_require__","loadChunk","__next_app_load_chunk__","routeModule","definition","kind","APP_PAGE","page","pathname","bundlePath","filename","appPaths","userland","loaderTree"],"mappings":";;;;;;AA6BA,OAAO,MAAMM,eAAe;AAH5B,8BAA8B;AAzB9B,SAASN,kBAAkB,QAAQ,2DAA2D;IAAE,wBAAwB;AAAW,EAAC;AAYpI,yEAAyE;AAEzE,cAAc;AAGd,SAASE,IAAI,EAAEC,KAAK,GAAE;IAapBM,WAAWC;AAKb,4DAA4D;;;;;;;;;;;AAC5D,OAAO,MAAMC,cAAc,IAAIX,mBAAmB,uBAAA;IAChDY,MAAAA,MAAY;QACVC,KAAAA;IAAMZ;IAAAA,MAAUa,QAAQ;gBACxBC,IAAAA;YAAAA,CAAM;YAAA;wBACNC,IAAAA;oBAAAA,KAAU;oBAAA;yBACV,2CAA2C;8BAC3CC,IAAAA,CAAAA;wBAAAA,CAAY,OAAA;4BAAA,IAAA;4BAAA;yBAAA;;uBACZC,UAAU;;iBACVC,UAAU,EAAE;kBACd,QAAA,CAAA;gBAAA,UAAA;oBAAA,IAAA;oBAAA;iBAAA;;WACAC,UAAU;;SACRC,YAAYnB;UACd,QAAA;YAAA,MAAA;gBACA,OAAA,QAAA;wBAAA","ignoreList":[0]}},
    {"offset": {"line": 203, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}